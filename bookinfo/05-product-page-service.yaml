apiVersion: v1  
kind: Service  
metadata:  
  name: productpage-lb  
  namespace: bookinfo  
  labels:  
    app: productpage  
    service: productpage  
spec:  
  type: LoadBalancer  
  ports:  
  - port: 9080  
    name: http  
    targetPort: 9080
  selector:  
    app: productpage  
---
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: bookinfo
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  namespace: bookinfo
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  namespace: bookinfo
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9080"
        prometheus.io/path: "/metrics"
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      containers:
      - name: productpage
        image: docker.io/istio/examples-bookinfo-productpage-v1:1.18.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: 
            drop: ["ALL"]
      volumes:
      - name: tmp
        emptyDir: {}
